# TODO: worker_connections/worker_processes/worker_rlimit_nofile/ulimit: https://www.nginx.com/blog/avoiding-top-10-nginx-configuration-mistakes/#insufficient-fds, https://nginx.org/en/docs/ngx_core_module.html, https://serverfault.com/questions/787919/optimal-value-for-nginx-worker-connections, https://gist.github.com/v0lkan/90fcb83c86918732b894, https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration#worker-processes-and-worker-connections (FEAT, TWEAK)
# TODO: backlog/somaxconn: https://docs.nginx.com/nginx/admin-guide/web-server/serving-static-content/#optimizing-the-backlog-queue (FEAT, TWEAK)
# TODO: investigate other performance articles: https://www.nginx.com/blog/thread-pools-boost-performance-9x/, https://www.nginx.com/blog/tuning-nginx#limit_rate, https://www.nginx.com/blog/avoiding-top-10-nginx-configuration-mistakes/, https://www.nginx.com/blog/performance-tuning-tips-tricks/, https://www.nginx.com/wp-content/uploads/2018/11/NGINX-Conf-2018-slides_Rawdat-tuning.pdf, https://www.unixteacher.org/blog/tuning-nginx-to-handle-more-than-50-000-requests/ (FEAT, TWEAK)
# TODO: investigate cookbooks: https://calomel.org/nginx.html, https://www.oreilly.com/library/view/nginx-cookbook/9781492049098/ (FEAT, TWEAK)

# TODO: closed API on a subdomain for monitoring (https://docs.nginx.com/nginx/admin-guide/monitoring/live-activity-monitoring/), updating keyzones (https://docs.nginx.com/nginx/admin-guide/security-controls/denylisting-ip-addresses/), upstreams configuration (https://docs.nginx.com/nginx/admin-guide/load-balancer/dynamic-configuration-api/), protected by SSO (https://docs.nginx.com/nginx/deployment-guides/single-sign-on/cognito/), etc (FEAT, NGINX Plus)
# TODO: keepalived (https://docs.nginx.com/nginx/admin-guide/high-availability/ha-keepalived/, https://docs.nginx.com/nginx/admin-guide/high-availability/ha-keepalived-nodes/, https://docs.nginx.com/nginx/deployment-guides/amazon-web-services/)? (FEAT, NGINX Plus, SHARESTATE)

# TODO: caching for pages that only slightly change (for example main page). Maybe add header and footer on client side, construct them directly in NGINX, use memcached, or something else (FEAT)

user {{ env.NGINX_USER }};
pid /run/nginx.pid;

error_log {{ env.NGINX_ERROR_LOG }} notice;

# TODO: load_module modules/ngx_fips_check_module.so; (NGINX-MOD)

pcre_jit on;

thread_pool default threads={{ env.NGINX_THREAD_POOL_SIZE }} max_queue={{ env.NGINX_THREAD_POOL_MAX_QUEUE }};

working_directory {{ env.NGINX_DUMPS }};
worker_rlimit_core {{ env.NGINX_WORKER_RLIMIT_CORE }};

worker_rlimit_nofile {{ env.NGINX_WORKER_RLIMIT_NOFILE }};

# TODO: worker_cpu_affinity? (FEAT, TWEAK)

worker_processes {{ env.NGINX_WORKER_PROCESSES }};

worker_shutdown_timeout 60s;

events {
	use epoll; # Linux 4.5+

	multi_accept {{ env.NGINX_MULTI_ACCEPT }};

	worker_connections {{ env.NGINX_WORKER_CONNECTIONS }};

	worker_aio_requests {{ env.NGINX_WORKER_AIO_REQUESTS }};
}

http {
	access_log {{ env.NGINX_ACCESS_LOG }} combined; # TODO: decide which log format to use (TWEAK)
	                                                # TODO: is there any benefit doing buffering and/or compression of logs on NGINX side instead of Docker? (TEST)
	include {{ env.NGINX_NJK_OUTPUT_DIR }}/http.conf;
}

# TODO: add configuration for streams (FEAT, STREAM)
# TODO: add configuration for mail server (FEAT, MAIL)
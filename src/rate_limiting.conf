limit_rate {{ env.NGINX_LIMIT_RATE }};
limit_rate_after {{ env.NGINX_LIMIT_RATE_AFTER }};

# TODO: this does not work with multiple NGINX instances? (SHARESTATE)

limit_conn_zone $binary_remote_addr zone=addr:10m;
limit_req_zone $binary_remote_addr zone=addr2:10m rate={{ env.NGINX_LIMIT_REQ_RATE }};

limit_conn addr {{ env.NGINX_LIMIT_CONN }};
limit_req zone=addr2; # TODO: possible burst and/or nodelay? (FEAT)

limit_conn_log_level warn;
limit_req_log_level warn;

limit_conn_status 429;
limit_req_status 429;

# that is only http-level protection
# NOTE: implement more low-level protection (network-level protection, "classic" DDoS protection)
# NOTE: implement more high-level protection (application-level protection, like protection from spamming incorrect password logins, per-account and per-IP)

# NOTE: NGINX cannot connection-limit or rate-limit WebSocket connections, this must be done by the backend
